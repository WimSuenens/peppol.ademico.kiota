// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Peppol.Ademico.Kiota.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Peppol.Ademico.Kiota.Api.Peppol.V1.InvoiceResponses
{
    /// <summary>
    /// Builds and executes requests for operations under \api\peppol\v1\invoice-responses
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class InvoiceResponsesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Peppol.Ademico.Kiota.Api.Peppol.V1.InvoiceResponses.InvoiceResponsesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public InvoiceResponsesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/peppol/v1/invoice-responses", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Peppol.Ademico.Kiota.Api.Peppol.V1.InvoiceResponses.InvoiceResponsesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public InvoiceResponsesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/peppol/v1/invoice-responses", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;Send the Invoice Response back to the Seller after we have received an invoice/credit note. The Invoice Response is scheduled in the queue to be sent to the Seller. You get notified either via pull or push mechanism when the Invoice Response has be received by the Seller.&lt;/p&gt;&lt;p&gt;An Invoice Response can be used to inform the Seller of the status of an invoice in the Buyer&apos;s approval and payment processes, based on the Buyer&apos;s business rules and/or a Seller/Buyer agreement.The following values can be used for the Invoice Response status codes:&lt;table&gt;&lt;tr&gt;&lt;th&gt;Code&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AB&lt;/td&gt;&lt;td&gt;Buyer acknowledges: Status is used when Buyer has received a readable invoice message that can be understood and submitted for processing by the Buyer.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IP&lt;/td&gt;&lt;td&gt;In process: Status is used when the processing of the Invoice has started in Buyers system.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;UQ&lt;/td&gt;&lt;td&gt;Under query: Status is used when Buyer will not proceed to accept the Invoice without receiving additional information from the Seller.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CA&lt;/td&gt;&lt;td&gt;Conditionally accepted: Status is used when Buyer is accepting the Invoice under conditions stated in &apos;Status Reason&apos; and proceed to pay accordingly unless disputed by Seller.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RE&lt;/td&gt;&lt;td&gt;Rejected: MLR reject or Invoice reject. Status is used only when the Buyer will not process the referenced Invoice any further. Buyer is rejecting this invoice but not necessarily the commercial transaction. Although it can be used also for rejection for commercial reasons (invoice not corresponding to delivery).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AP&lt;/td&gt;&lt;td&gt;Accepted: Status is used only when the Buyer has given a final approval of the invoice and the next step is payment.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PD&lt;/td&gt;&lt;td&gt;Paid: Fully paid or partially paid. When partially paid: Status is used together with Clarification Reason code PPD, only when the Buyer has initiated the payment of the invoice without having paid the accepted amount in full.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;You can find &lt;a href=&quot;https://docs.peppol.eu/poacc/upgrade-3/profiles/63-invoiceresponse/#status-codes-1&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; more details about the Invoice Response status codes&lt;/p&gt;&lt;p&gt;Depending on the status code, a clarification may be needed to state the Buyer&apos;s reason for the status and/or any expected action from the Seller&apos;s side. The clarification may be given either as text (in Status Reason) or as code (in StatusReasonCode). The purpose of the clarification is to provide the Seller with structured information which enables him to partially or fully automate his processing. The clarifications are of two types:&lt;ul&gt;&lt;li&gt;Reasons for the given status.&lt;/li&gt;&lt;li&gt;Actions that the Buyer requests from the Seller.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The following values can be used for the clarification code reason(when clarificationType=&lt;b&gt;OPStatusReason&lt;/b&gt;):&lt;/p&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Code&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;NON&lt;/td&gt;&lt;td&gt;No issue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;REF&lt;/td&gt;&lt;td&gt;References incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LEG&lt;/td&gt;&lt;td&gt;Legal information incorrect&lt;/td&gt;&lt;/tr&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;REC&lt;/td&gt;&lt;td&gt;Receiver unknown&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;QUA&lt;/td&gt;&lt;td&gt;Item quality insufficient&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DEL&lt;/td&gt;&lt;td&gt;Delivery proposed or provided is not acceptable&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PRI&lt;/td&gt;&lt;td&gt;Prices incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;QTY&lt;/td&gt;&lt;td&gt;Quantity incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ITM&lt;/td&gt;&lt;td&gt;Items incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PAY&lt;/td&gt;&lt;td&gt;Payment terms incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;UNR&lt;/td&gt;&lt;td&gt;Not recognized&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;FIN&lt;/td&gt;&lt;td&gt;Finance incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PPD&lt;/td&gt;&lt;td&gt;Partially Paid&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;OTH&lt;/td&gt;&lt;td&gt;Other&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The following values can be used for the clarification code reason(when clarificationType=&lt;b&gt;OPStatusAction&lt;/b&gt;):&lt;/p&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Code&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;NOA&lt;/td&gt;&lt;td&gt;No action required&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PIN&lt;/td&gt;&lt;td&gt;Provide information&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;NIN&lt;/td&gt;&lt;td&gt;Issue new invoice&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CNF&lt;/td&gt;&lt;td&gt;Credit fully&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CNP&lt;/td&gt;&lt;td&gt;Credit partially&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CNA&lt;/td&gt;&lt;td&gt;Credit the amount&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;OTH&lt;/td&gt;&lt;td&gt;Other&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;You can find &lt;a href=&quot;https://docs.peppol.eu/poacc/upgrade-3/profiles/63-invoiceresponse/#clarification&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; more details about the Invoice Response clarifications&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Peppol.Ademico.Kiota.Models.DocumentSubmissionResult"/></returns>
        /// <param name="body">Contains the Invoice Response details</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Peppol.Ademico.Kiota.Models.ApplicationMessage">When receiving a 400 status code</exception>
        /// <exception cref="global::Peppol.Ademico.Kiota.Models.ApplicationMessage">When receiving a 401 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Peppol.Ademico.Kiota.Models.DocumentSubmissionResult?> PostAsync(global::Peppol.Ademico.Kiota.Models.InvoiceResponseRO body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Peppol.Ademico.Kiota.Models.DocumentSubmissionResult> PostAsync(global::Peppol.Ademico.Kiota.Models.InvoiceResponseRO body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Peppol.Ademico.Kiota.Models.ApplicationMessage.CreateFromDiscriminatorValue },
                { "401", global::Peppol.Ademico.Kiota.Models.ApplicationMessage.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Peppol.Ademico.Kiota.Models.DocumentSubmissionResult>(requestInfo, global::Peppol.Ademico.Kiota.Models.DocumentSubmissionResult.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Send the Invoice Response back to the Seller after we have received an invoice/credit note. The Invoice Response is scheduled in the queue to be sent to the Seller. You get notified either via pull or push mechanism when the Invoice Response has be received by the Seller.&lt;/p&gt;&lt;p&gt;An Invoice Response can be used to inform the Seller of the status of an invoice in the Buyer&apos;s approval and payment processes, based on the Buyer&apos;s business rules and/or a Seller/Buyer agreement.The following values can be used for the Invoice Response status codes:&lt;table&gt;&lt;tr&gt;&lt;th&gt;Code&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AB&lt;/td&gt;&lt;td&gt;Buyer acknowledges: Status is used when Buyer has received a readable invoice message that can be understood and submitted for processing by the Buyer.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IP&lt;/td&gt;&lt;td&gt;In process: Status is used when the processing of the Invoice has started in Buyers system.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;UQ&lt;/td&gt;&lt;td&gt;Under query: Status is used when Buyer will not proceed to accept the Invoice without receiving additional information from the Seller.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CA&lt;/td&gt;&lt;td&gt;Conditionally accepted: Status is used when Buyer is accepting the Invoice under conditions stated in &apos;Status Reason&apos; and proceed to pay accordingly unless disputed by Seller.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RE&lt;/td&gt;&lt;td&gt;Rejected: MLR reject or Invoice reject. Status is used only when the Buyer will not process the referenced Invoice any further. Buyer is rejecting this invoice but not necessarily the commercial transaction. Although it can be used also for rejection for commercial reasons (invoice not corresponding to delivery).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AP&lt;/td&gt;&lt;td&gt;Accepted: Status is used only when the Buyer has given a final approval of the invoice and the next step is payment.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PD&lt;/td&gt;&lt;td&gt;Paid: Fully paid or partially paid. When partially paid: Status is used together with Clarification Reason code PPD, only when the Buyer has initiated the payment of the invoice without having paid the accepted amount in full.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;You can find &lt;a href=&quot;https://docs.peppol.eu/poacc/upgrade-3/profiles/63-invoiceresponse/#status-codes-1&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; more details about the Invoice Response status codes&lt;/p&gt;&lt;p&gt;Depending on the status code, a clarification may be needed to state the Buyer&apos;s reason for the status and/or any expected action from the Seller&apos;s side. The clarification may be given either as text (in Status Reason) or as code (in StatusReasonCode). The purpose of the clarification is to provide the Seller with structured information which enables him to partially or fully automate his processing. The clarifications are of two types:&lt;ul&gt;&lt;li&gt;Reasons for the given status.&lt;/li&gt;&lt;li&gt;Actions that the Buyer requests from the Seller.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The following values can be used for the clarification code reason(when clarificationType=&lt;b&gt;OPStatusReason&lt;/b&gt;):&lt;/p&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Code&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;NON&lt;/td&gt;&lt;td&gt;No issue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;REF&lt;/td&gt;&lt;td&gt;References incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LEG&lt;/td&gt;&lt;td&gt;Legal information incorrect&lt;/td&gt;&lt;/tr&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;REC&lt;/td&gt;&lt;td&gt;Receiver unknown&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;QUA&lt;/td&gt;&lt;td&gt;Item quality insufficient&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DEL&lt;/td&gt;&lt;td&gt;Delivery proposed or provided is not acceptable&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PRI&lt;/td&gt;&lt;td&gt;Prices incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;QTY&lt;/td&gt;&lt;td&gt;Quantity incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ITM&lt;/td&gt;&lt;td&gt;Items incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PAY&lt;/td&gt;&lt;td&gt;Payment terms incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;UNR&lt;/td&gt;&lt;td&gt;Not recognized&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;FIN&lt;/td&gt;&lt;td&gt;Finance incorrect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PPD&lt;/td&gt;&lt;td&gt;Partially Paid&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;OTH&lt;/td&gt;&lt;td&gt;Other&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The following values can be used for the clarification code reason(when clarificationType=&lt;b&gt;OPStatusAction&lt;/b&gt;):&lt;/p&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Code&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;NOA&lt;/td&gt;&lt;td&gt;No action required&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PIN&lt;/td&gt;&lt;td&gt;Provide information&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;NIN&lt;/td&gt;&lt;td&gt;Issue new invoice&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CNF&lt;/td&gt;&lt;td&gt;Credit fully&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CNP&lt;/td&gt;&lt;td&gt;Credit partially&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CNA&lt;/td&gt;&lt;td&gt;Credit the amount&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;OTH&lt;/td&gt;&lt;td&gt;Other&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;You can find &lt;a href=&quot;https://docs.peppol.eu/poacc/upgrade-3/profiles/63-invoiceresponse/#clarification&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; more details about the Invoice Response clarifications&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Contains the Invoice Response details</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Peppol.Ademico.Kiota.Models.InvoiceResponseRO body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Peppol.Ademico.Kiota.Models.InvoiceResponseRO body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Peppol.Ademico.Kiota.Api.Peppol.V1.InvoiceResponses.InvoiceResponsesRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Peppol.Ademico.Kiota.Api.Peppol.V1.InvoiceResponses.InvoiceResponsesRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Peppol.Ademico.Kiota.Api.Peppol.V1.InvoiceResponses.InvoiceResponsesRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class InvoiceResponsesRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
